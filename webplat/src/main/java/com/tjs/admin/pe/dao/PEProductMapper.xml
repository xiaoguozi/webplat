<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tjs.admin.pe.dao.PEProductMapper">
	<resultMap id="peProductMap" type="com.tjs.admin.pe.model.PEProduct">
        <id column="id" property="id" />
   		<result property="name" column="name"  />
   		<result property="simpleName" column="simple_name"  />
   		<result property="netWorth" column="net_worth"  />
   		<result property="accumulatedIncome" column="accumulated_income"  />
   		<result property="netWorthTime" column="net_worth_time"  />
   		<result property="setupTime" column="setup_time"  />
   		<result property="runTime" column="run_time"  />
   		<result property="nowRate" column="now_rate"  />
   		<result property="towRate" column="tow_rate"  />
   		<result property="oneRate" column="one_rate"  />
   		<result property="yearRate" column="year_rate"  />
   		<result property="fundType" column="fund_type"  />
   		<result property="productLevel" column="product_level"  />
   		<result property="distributionPlatform" column="distribution_platform"  />
   		<result property="custodianBank" column="custodian_bank"  />
   		<result property="stockbrokers" column="stockbrokers"  />
   		<result property="fundProperty" column="fund_property"  />
   		<result property="whetherStructure" column="whether_structure"  />
   		<result property="openTime" column="open_time"  />
   		<result property="subscripStart" column="subscrip_start"  />
   		<result property="subscripFee" column="subscrip_fee"  />
   		<result property="exitFee" column="exit_fee"  />
   		<result property="managementFee" column="management_fee"  />
   		<result property="recommendReason" column="recommend_reason"  />
   		<result property="createDate" column="create_date"  />
   		<result property="lastMdifyDate" column="last_modify_date"  />
   		<result property="createrId" column="creater_id"  />
   		<result property="createrName" column="creater_name"  />
   		<result property="recommendLocation" column="recommend_location"  />
   		<result property="recommendSequence" column="recommend_sequence"  />
   		<result property="status" column="status"  />
   		<result property="pecompanyId" column="pecompany_id"  />
   		<result property="pecompanyName" column="pecompany_name"  />
    </resultMap>
    
    <sql id="Base_Column_List">
        id, name, simple_name, net_worth, accumulated_income,
        net_worth_time, setup_time, run_time, now_rate, tow_rate,
        one_rate, year_rate, fund_type, product_level, distribution_platform,
        custodian_bank, stockbrokers, fund_property, whether_structure,
        open_time, subscrip_start, subscrip_fee, exit_fee, management_fee,
        recommend_reason, create_date, last_modify_date, creater_id,
        creater_name, recommend_location, recommend_sequence, status,
        pecompany_id, pecompany_name
    </sql>
    
    <select id="getPEProductById" resultMap="peProductMap" parameterType="long">
        SELECT
        <include refid="Base_Column_List" />
        FROM pe_product
        WHERE id = #{id}
    </select>
 
 	 <select id="getPEProductList" resultMap="peProductMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List" />
         FROM pe_product
    </select>
    
     <select id="selectListCount" parameterType="com.tjs.admin.pe.model.PEProduct" resultType="java.lang.Integer">
        SELECT COUNT(*) AS total FROM pe_product
    </select>
    
 
<!--  
    <delete id="deletePEProductById" parameterType="java.lang.Long">
        DELETE FROM pe_product
        WHERE id = #{id}
    </delete>
    
    <insert id="insertPEProduct" parameterType="com.tjs.admin.pe.model.PEProduct" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO pe_product 
        <include refid="Base_Column_List" />
        VALUES (#{id}, #{name}, #{simpleName}, #{netWorth}, #{accumulatedIncome}, #{netWorthTime}, #{setupTime}, #{runTime}, #{nowRate},
        #{towRate}, #{oneRate}, #{yearRate}, #{fundType}, #{productLevel}, #{distributionPlatform}, #{custodianBank}, #{stockbrokers}, #{fundProperty}, #{whetherStructure}, #{openTime},
        #{subscripStart}, #{subscripFee}, #{exitFee}, #{managementFee}, #{recommendReason}, #{createDate}, #{lastMdifyDate}, #{createrId},
        #{createrName}, #{recommendLocation}, #{recommendSequence},#{status}, #{pecompanyId}, #{pecompanyName})
    </insert>
   
    <select id="countByExample" parameterType="com.tjs.admin.model.UserExample" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=CHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set id = #{record.id,jdbcType=BIGINT},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=CHAR},
        state = #{record.state,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.tjs.admin.model.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=CHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tjs.admin.model.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=CHAR},
        state = #{state,jdbcType=VARCHAR},
        create_time =
        #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
-->   
 

    <!-- 分页条件查询 
    <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.tjs.admin.model.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    
    <select id="selectList" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from user
    </select>
     <select id="selectListCount" parameterType="com.tjs.admin.model.UserExample" resultType="java.lang.Integer">
        select count(*) as total from user
       
    </select>
     <select id="selectCountByUserName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) as total from user where username = #{userName}
       
    </select>
 -->   
    
</mapper>