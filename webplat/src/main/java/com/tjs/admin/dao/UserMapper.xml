<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tjs.admin.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.tjs.admin.model.User">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="CHAR" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="reg_from" property="regFrom" jdbcType="VARCHAR" />
        <result column="parent" property="parent" jdbcType="BIGINT" />
    </resultMap>
    <resultMap id="AdminResultMap" type="com.tjs.admin.model.User">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="reg_from" property="regFrom" jdbcType="VARCHAR" />
        <result column="parent" property="parent" jdbcType="BIGINT" />
        <result column="rmobile_no" property="rmobileNo" jdbcType="VARCHAR" />
        <result column="rname" property="rname" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, username, password, state, create_time, reg_from, parent
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tjs.admin.model.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.tjs.admin.model.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.tjs.admin.model.User" useGeneratedKeys="true" keyProperty="id">
        insert into user (id, username, password,
        state, create_time, reg_from, parent)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=CHAR},
        #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{regFrom,jdbcType=VARCHAR}, 
        #{parent,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.tjs.admin.model.User" useGeneratedKeys="true" keyProperty="id">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="regFrom != null">
                reg_from,
            </if>
            <if test="parent != null">
                parent
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=CHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="regFrom != null">
                #{regFrom,jdbcType=VARCHAR},
            </if>
            <if test="parent != null">
                #{parent,jdbcType=BIGINT}
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.tjs.admin.model.UserExample" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=CHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.regFrom != null">
                reg_from = #{record.regFrom,jdbcType=VARCHAR},
            </if>
            <if test="record.parent != null">
                parent = #{record.parent,jdbcType=BIGINT}
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set id = #{record.id,jdbcType=BIGINT},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=CHAR},
        state = #{record.state,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        reg_from = #{record.regFrom,jdbcType=VARCHAR},
        parent = #{record.parent,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.tjs.admin.model.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=CHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="regFrom != null">
                reg_from = #{regFrom,jdbcType=VARCHAR}
            </if>
            <if test="parent != null">
                parent = #{parent,jdbcType=BIGINT}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tjs.admin.model.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=CHAR},
        state = #{state,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        reg_from = #{regFrom,jdbcType=VARCHAR},
        parent = #{parent,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 用户登录验证查询 -->
    <select id="authentication" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from user
        where username = #{record.username,jdbcType=VARCHAR} and password = #{record.password,jdbcType=CHAR}
    </select>

    <!-- 分页条件查询 -->
    <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.tjs.admin.model.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    
    <select id="selectList" resultMap="BaseResultMap" parameterType="com.tjs.admin.controller.UserCtrlModel">
        select
        <include refid="Base_Column_List" />
        from user
        <if test="pageNo!= 0">
          LIMIT #{limitStart} ,#{pageSize}
       </if> 
    </select>
    
     <select id="selectListCount" parameterType="com.tjs.admin.controller.UserCtrlModel" resultType="java.lang.Integer">
        select count(*) as total from user
       
    </select>
     <select id="selectCountByUserName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) as total from user where username = #{userName}
       
    </select>
    
    <select id="selectMyRmdUserCount" parameterType="com.tjs.admin.controller.UserCtrlModel" resultType="java.lang.Integer">
        select count(*) as total from user where parent = #{user.parent}
    </select>
    <select id="selectMyRmdUserList" resultMap="BaseResultMap" parameterType="com.tjs.admin.controller.UserCtrlModel">
        select
        <include refid="Base_Column_List" />
        from user where parent = #{user.parent}
        <if test="pageNo!= 0">
          LIMIT #{limitStart} ,#{pageSize}
       </if> 
    </select>
    
    
    <select id="selectAdminRmdListCount" parameterType="com.tjs.admin.controller.UserCtrlModel" resultType="java.lang.Integer">
        SELECT COUNT(f.id) FROM
		(
			SELECT t.*, u2.mobile_no rmobile_no, u2.name rname FROM
			(SELECT 
			  u.id,
			  u.username,
			  u1.name,
			  u.create_time,
			  u.reg_from,
			  u.parent 
			FROM
			  USER u,
			  t_user_info u1 
			WHERE u.id = u1.user_id 
			)t LEFT JOIN t_user_info u2 ON t.parent = u2.user_id
		)f where 1=1
		<if test="user.rmobileNo != null and user.rmobileNo!=''">
               and f.rmobile_no = #{user.rmobileNo}
        </if>
        <if test="user.regFrom != null and user.regFrom!=''">
               <if test="user.regFrom != 0 ">
	               and f.reg_from = #{user.regFrom}
               </if>
               <if test="user.regFrom == 0 ">
	               and (f.reg_from = #{user.regFrom} || f.reg_from is null)
               </if>
        </if>
        <if test="user.createDateString != null and user.createDateString!=''">
               and DATE_FORMAT(f.create_time,'%Y-%m-%d') = #{user.createDateString}
        </if>
    </select>
    
    <select id="selectAdminRmdUserList" resultMap="AdminResultMap" parameterType="com.tjs.admin.controller.UserCtrlModel">
        SELECT f.*, f.rmobile_no, f.rname  FROM
		(
			SELECT t.*, u2.mobile_no rmobile_no, u2.name rname FROM
			(SELECT 
			  u.id,
			  u.username,
			  u1.name,
			  u.create_time,
			  u.reg_from,
			  u.parent 
			FROM
			  USER u,
			  t_user_info u1 
			WHERE u.id = u1.user_id 
			)t LEFT JOIN t_user_info u2 ON t.parent = u2.user_id
		)f where 1=1
		<if test="user.rmobileNo != null and user.rmobileNo!=''">
               and f.rmobile_no = #{user.rmobileNo}
        </if>
        <if test="user.regFrom != null and user.regFrom!=''">
               <if test="user.regFrom != 0 ">
	               and f.reg_from = #{user.regFrom}
               </if>
               <if test="user.regFrom == 0 ">
	               and (f.reg_from = #{user.regFrom} || f.reg_from is null)
               </if>
        </if>
        <if test="user.createDateString != null and user.createDateString!=''">
               and DATE_FORMAT(f.create_time,'%Y-%m-%d') = #{user.createDateString}
        </if>
        	
        ORDER BY f.create_time desc
        	
        <if test="pageNo!= 0">
           LIMIT #{limitStart} ,#{pageSize}
        </if>
        
    </select>
    
</mapper>